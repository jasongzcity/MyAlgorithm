思路: 其实这是一个类似于图的方法.DFS + memo. memo记录词和词之间的"步数距离"
唯一难点: 有没有更好的方法来判断两String间差异是否一个字母? 如果没有只能用暴力解法.

注意: 只是单纯地像我在源码中这样DFS 会超时,因为没有用memo,很多次到目标的步数被重算. 一个难点,如果用memo, memo记录的距离不一定正确
(考虑这种情况:某单词i 到endWord有更短距离,只是暂时被"阻挡"住了.但此时memo已经记录了一个错误的"最短距离")

BFS 也TLE..根据部分网上的答案, BFS是正确的思路.那么唯一可能就是在字符串匹配的时候加快速度.
加快速度见代码: 贴一段解释:
 I use two for loops and determine if any pair of words differ by one. 
 That's a huge slow-down because it'll takes m (size of reached) * n (size of wordDict) * l (length of words) time, 
 while in this solution, it takes 26 * l * m time. So when n is huge, this solution will be (n/26) times faster.